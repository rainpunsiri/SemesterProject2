# -*- coding: utf-8 -*-
"""collect_and_process

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vSSyHUaOBTPz_dYMS_-nEgWMSCU7JBnJ
"""

#download important stuff
import requests
import pandas as pd
import os
from datetime import datetime

#api upload and changing the id names to be readable
BLS_API_KEY = "74447e2c63664d4f95e05655f597d20e"

series_ids = {
    "LNS11000000": "Civilian Labor Force",
    "LNS13000000": "Civilian Unemployment",
    "LNS14000000": "Unemployment Rate",
    "CES0000000001": "Total Nonfarm Employment"
}

#grab data from BLS
def fetch_bls_data(series_id, start_year=2014, end_year=datetime.now().year):
    url = "https://api.bls.gov/publicAPI/v2/timeseries/data/"
    headers = {"Content-Type": "application/json"}
    payload = {
        "seriesid": [series_id],
        "startyear": str(start_year),
        "endyear": str(end_year),
        "registrationkey": BLS_API_KEY
    }
    response = requests.post(url, json=payload, headers=headers)
    data = response.json()
    return data

#process and correct data
def process_bls_data(series_data, series_name):
    records = []
    for entry in series_data['Results']['series'][0]['data']:
        records.append({
            "date": f"{entry['year']}-{entry['periodName']}",
            "value": entry['value'],
            "series_name": series_name
        })
    df = pd.DataFrame(records)
    df['date'] = pd.to_datetime(df['date'], format='%Y-%B')
    df['value'] = pd.to_numeric(df['value'])
    return df

#now lets save that data down into a csv
def main():
    all_data = []
    for series_id, series_name in series_ids.items():
        print(f"Fetching data for {series_name}...")
        series_data = fetch_bls_data(series_id)
        df = process_bls_data(series_data, series_name)
        all_data.append(df)

    # Combine all series into one CSV
    combined_df = pd.concat(all_data, ignore_index=True)
    combined_df.to_csv("bls_data.csv", index=False)
    print("Data saved as bls_data.csv")

if __name__ == "__main__":
    main()